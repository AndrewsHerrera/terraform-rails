version: 0.2

env:
  variables:
    TF_VAR_project_name: {{project_name}}
    TF_VAR_environment: {{environment}}
    TF_VAR_route53_domain: {{route53_domain}}
    TF_VAR_region: {{region}}
    TF_VAR_rds_password: whatever
    TF_VAR_date: whatever
    TF_VAR_secret_key_base: whatever
    TF_VAR_key_pair_name: whatever
    TF_VAR_ssh_public_key: whatever

phases:
  install:
    commands:
      - apt-get update -y
      - echo '#!/bin/bash' > /usr/local/bin/ok
      - echo 'if [[ "$CODEBUILD_BUILD_SUCCEEDING" == "0" ]]; then exit 1; else exit 0; fi' >> /usr/local/bin/ok
      - chmod +x /usr/local/bin/ok
      - ok && wget https://releases.hashicorp.com/terraform/0.11.11/terraform_0.11.11_linux_amd64.zip
      - ok && unzip terraform_0.11.11_linux_amd64.zip
      - ok && mv terraform /usr/local/bin/
  pre_build:
    commands:
      - ok && cp $CODEBUILD_SRC_DIR/deployment/terraform/s3_remote_state.tf.$TF_VAR_environment $CODEBUILD_SRC_DIR/deployment/terraform/s3_remote_state.tf
      - ok && cp $CODEBUILD_SRC_DIR/deployment/terraform/use_remote_state.tf.$TF_VAR_environment $CODEBUILD_SRC_DIR/deployment/terraform/use_remote_state.tf
      - ok && $(aws ecr get-login --no-include-email --region {{region}})
      - ok && date=$(date +%F-%s)
  build:
    commands:
      - ok && chmod 700 $CODEBUILD_SRC_DIR/bin/entrypoint
      - ok && docker pull {{ecr_repository_url}}:latest
      - ok && docker build --cache-from={{ecr_repository_url}}:latest -t {{project_name}} .
      - ok && docker tag {{project_name}}:latest {{ecr_repository_url}}:latest
      - ok && docker tag {{project_name}}:latest {{ecr_repository_url}}:$date
      - ok && docker push {{ecr_repository_url}}:latest
      - ok && docker push {{ecr_repository_url}}:$date
  post_build:
    commands:
      - ok && cd $CODEBUILD_SRC_DIR/deployment/terraform
      - ok && terraform init
      - ok && TF_VAR_docker_image=$date
      - ok && terraform apply -target="aws_ecs_service.ecs_service" --auto-approve
